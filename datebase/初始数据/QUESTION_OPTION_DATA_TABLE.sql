REM INSERTING into C##TEST.QUESTION_OPTION
SET DEFINE OFF;
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'11','$O(n^2)$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'11','$O(nlog_2n)$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'14','插入、删除操作更方便');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'11','$O(1)$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'11','$O(n)$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'14','可以进行随机访问');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'14','可以省略表头指针或表尾指针');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'14','访问前后相邻节点更灵活');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'15','下一个元素的地址
');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'15','内存储器地址');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'15','下一个元素在数组中的位置');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'15','左链或右链指向的元素的地址
');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'16','4');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'16','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'16','6');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'16','7');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'17','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'17','4');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'17','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'17','6');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'18','总和');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'18','最小值');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'18','最大值');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'18','平均值');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'19','n');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'19','n+1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'19','n-1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'19','2n');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'35','程序');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'35','问题求解步骤的描述');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'35','要满足5个基本特性');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'35','满足健壮性');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'36','随机存取的存储结构');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'36','顺序存取的存储结构');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'36','索引存取的存取结构');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'36','散列存取的存储结构');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'37','存储密度大');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'37','插入运算方便');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'37','删除运算方便');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'37','方便地运用于各种逻辑结构的存储表示');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'38','x=1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'38','x=0');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'38','x=-1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'38','x=2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'39','朱亚萍');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'39','赵生捷');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'39','罗烨');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'39','韩丰夏');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (4,'39','邓浩');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'40','邹宏');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'40','周莉莉');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'40','周爱民');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'40','王冠博');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (4,'40','张世铎');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'2','一个进程可以创建一个或多个线程');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'2','一个线程可以创建一个或多个线程');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'2','一个线程可以创建一个或多个进程');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'2','一个进程可以创建一个或多个进程');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'3','父进程与子进程可以并发执行');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'3','父进程与子进程共享虚拟地址空间');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'3','父进程与子进程有不同的进程控制块');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'3','父进程与子进程不能同时使用同一临界资源');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'4','文件系统');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'4','共享内存');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'4','全局变量');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'4','消息传递系统');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'5','修改进程状态为就绪态');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'5','降低进程优先级');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'5','给进程分配用户内存空间');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'5','增加进程时间片大小');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'6','就绪态->运行态');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'6','运行态->就绪态');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'6','运行态->阻塞态');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'6','阻塞态->运行态');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'7','等待从键盘输入数据');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'7','等待协作进程的一个信号');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'7','等待操作系统分配cpu时间');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'7','等待网络数据进入内存');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'8','该进程可以重新竞争cpu');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'8','优先级变大');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'8','pcb移动到就绪队列之首');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'8','进程变成运行态');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'9','填写一个该进程的进程表项');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'9','分配该进程适当的内存');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'9','将该进程插入就绪队列');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'9','为该进程分配cpu');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'10','11');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'10','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'10','$1_1$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'10','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'12','1202');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'12','-2021');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'12','$\frac{1}{1202}$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'12','$-\frac{1}{1202}$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'13','$\sqrt{6}$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'13','$\sqrt{7}$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'13','$\sqrt{10}$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'13','$\sqrt{11}$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'26','$\cos^2x$
');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'26','$- \sin^2x$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'26','$2\cos^2x-1$');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'26','32');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'33','设立“中朝”');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'33','实行盐铁官营（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'33','设立五经博士');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'33','分封同姓诸侯（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'34','飞机（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'34','塑料（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'34','火车');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'34','汽车（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'41','水（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'41','小麦（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'41','葡萄（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'41','玉米（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'42','天人权（正）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'42','自由至上');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'42','分权制衡');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'42','社会平等');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'53','健壮性');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'53','鲁棒性');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'53','哈哈性（错）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'53','正确性');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (4,'53','呜呜性（错）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (5,'53','高效性');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (6,'53','可读性');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (7,'53','呵呵性（错）');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'54','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'54','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'54','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'54','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'55','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'55','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'55','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'55','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'56','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'56','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'56','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'56','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'57','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'57','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'57','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'57','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'58','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'58','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'58','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'58','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'59','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'59','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'59','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'59','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'60','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'60','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'60','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'60','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'61','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'61','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'61','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'61','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'62','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'62','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'62','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'62','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'63','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'63','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'63','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'63','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'64','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'64','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'64','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'64','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'65','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'65','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'65','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'65','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'66','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'66','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'66','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'66','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'67','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'67','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'67','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'67','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'68','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'68','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'68','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'68','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'69','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'69','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'69','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'69','3');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (0,'70','5');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (1,'70','2');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (2,'70','1');
Insert into C##TEST.QUESTION_OPTION (OPTION_ID,QUESTION_ID,CONTENT) values (3,'70','3');
